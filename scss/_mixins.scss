  // mixin BTN
  @mixin btn($background-color, $color, $font){
    padding: 0;
    width: 100%;
    border: none;
    border-radius: 3px;
    background-color: $background-color;
    color: $color;
    font-family: $font;
    font-size: 1rem;
    line-height: 1rem;
    &:active:focus{
      box-shadow: none;
    }
    &:focus{
      outline: none;
    }
  }

  // mixin CARD
  @mixin card($margin, $padding, $height, $max-width, $background-color, $border-radius, $box-shadow){
    margin: $margin;
    padding: $padding;
    height: $height;
    max-width: $max-width;
    background-color: $background-color;
    border-radius: $border-radius;
    box-shadow: $box-shadow;
  }

  // mixin CONTENEUR FLEXIBLE
  @mixin flexbox{
    display: flex;
  }

  // mixin FLEX DIRECTION
  @mixin flex-direction($value: row){;
    flex-direction: $value;
  }

  // mixin FLEX WRAP
  @mixin flex-wrap($value: nowrap){
    flex-wrap: $value;
  }

  // mixin FLEX FLOW
  @mixin flex-flow($values: (row nowrap)){
    flex-flow: $values;
  }

  // mixin ORDER
  @mixin order($int: 0) {
    -webkit-box-ordinal-group: $int + 1;
    -moz-box-ordinal-group: $int + 1;
    -webkit-order: $int;
    -ms-flex-order: $int;
    order: $int;
  }

  // mixin FLEX GROW
  @mixin flex-grow($int: 1){
    -webkit-box-flex: $int;
    -moz-box-flex: $int;
    -webkit-flex-grow: $int;
    -ms-flex: $int;
    flex-grow: $int;
  }

  // mixin FLEX SHRINK
  @mixin flex-shrink($int: 0){
    -webkit-flex-shrink: $int;
    -moz-flex-shrink: $int;
    -ms-flex: $int;
    flex-shrink: $int;
  }

  // mixin FLEX BASIS
  @mixin flex-basis($value: auto){
    -webkit-flex-basis: $value;
    flex-basis: $value;
  }

  // mixin JUSTIFY CONTENT
  @mixin justify-content($value: flex-start){
    justify-content: $value;
  }

  // mixin ALIGN ITEMS
  @mixin align-items($value: stretch){
    align-items: $value;
  }

  // mixin ALIGN SELF
  @mixin align-self($value: auto){
    -webkit-align-self: $value;
    @if $value == flex-start{
      -ms-flex-item-align: start;
    } @else if $value == flex-end{
      -ms-flex-item-align: end;
    } @else{
      -ms-flex-item-align: $value;
    }
    align-self: $value;
  }

  // mixin ALIGN CONTENT
  @mixin align-content($value: stretch){
    -webkit-align-content: $value;
    @if $value == flex-start {
      -ms-flex-line-pack: start;
    } @else if $value == flex-end {
      -ms-flex-line-pack: end;
    } @else {
      -ms-flex-line-pack: $value;
    }
    align-content: $value;
  }

  // mixin SET REM FONT SIZE
  @function calculateRem($size){
    $remSize: $size / $font-size;
    @return $remSize * 1rem;
  }

  @mixin font-size($size){
    font-size: $size;
    font-size: calculateRem($size);
  }

  // mixin KEYFRAMES & ANIMATION
  @mixin keyframes($animation-name){
    @keyframes #{$animation-name}{
        @content;
    }
  }

  @mixin animation($str){
    animation: #{$str};
  }

  // mixin TRANSITION
  @mixin transition($args...){
    transition: $args;
  }

  // mixin TRANSFORM
  @mixin transform($transforms){
    transform: $transforms;
  }

  // mixin TRANSFORM ORIGIN
  @mixin transform-origin ($origin){
    transform-origin: $origin;
  }

  // mixin ROTATE
  @mixin rotate ($deg){
       @include transform(rotate(#{$deg}deg));
  }

  // mixin SCALE
  @mixin scale($scale){
       @include transform(scale($scale));
  }

  // mixin TRANSLATE
  @mixin translate ($x, $y){
       @include transform(translate($x, $y));
  }
